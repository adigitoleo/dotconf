# vim:ft=sh
# Shell aliases for bash/zsh.

# --- Prefix rules ---
# a = alsa (audio)
# d = disk controls (mount/unmount etc.)
# e = elinks (text browser utilities), note that bare `e` should run $EDITOR instead
# p = pacman (package manager)
# q = qutebrowser (web browser)
# v = virtual console
# w = wayland specific
# x = xorg-specific (X11 server)
# py = python (+ venv, pyenv, ...)
# jl = julia
# rg = ripgrep shortcuts (search)


# COLORS AND OUTPUT FORMATTING {{{1
# https://wiki.archlinux.org/index.php/Color_output_in_console

alias ls='ls --color=auto --group-directories-first'
alias d='diff --color=always -u'
alias grep='grep --color=auto'
alias ip='ip --color=auto'
alias lsblk='lsblk -o NAME,MAJ:MIN,RM,SIZE,RO,TYPE,MOUNTPOINT,FSTYPE,FSVER'
alias tree='tree --dirsfirst'
alias less='less -iR'
alias tmux='TERM=xterm-256color tmux'
alias l='tree -L 2|less'

# rg,glob 'pattern' : find filenames in current directory that match glob
alias rg,glob='rg --files -g'
# rg,absglob 'pattern' : same as rg,glob but print absolute paths
alias rg,absglob='rg $PWD --files -g'
# rg,find [opts] 'pattern' : find filenames recursively
alias rg,find='rg --files|rg'
# rg,absfind [opts] 'pattern' : same as rg,find but print absolute paths
alias rg,absfind='rg --files $PWD|rg'


# VERSION CONTROL AND SYSTEM ADMIN {{{1

alias y=yadm

if 1>/dev/null 2>&1 command -v pacman ; then
    alias pacman='pacman --color=auto'
    alias p='pacman --color=auto'
    alias p,get='sudo pacman -Syu --color=auto'
    alias p,rmsafe='sudo pacman -Rn --color=auto'
    alias p,rm='sudo pacman -Rns --color=auto'
    alias p,orphans='pacman -Qtdq --color=auto'
    alias aur='auracle'
    alias pacdiff='sudo SUDO_EDITOR="nvim -d" DIFFPROG="sudoedit" pacdiff'
elif 1>/dev/null 2>&1 command -v xbps-install ; then
    alias p,search='xbps-query -Rs'
    alias p,get='sudo xbps-install -Su'
    alias p,rmsafe='xbps-remove'
    alias p,rm='sudo xbps-remove -R'
    alias p,orphans='xbps-query --list-orphans'
fi

# Use ED25519 ssh keys by default.
alias ssh-keygen='ssh-keygen -t ed25519'

# Distinguish text from binary files (defer to grep).
alias is_text_file='grep -qIF ""'

# Terminal editor.
alias e=\$EDITOR
alias v=\$VISUAL

# New terminal instance (same directory).
alias t='1>/dev/null 2>/dev/null setsid $TERM'

# Suspend and lock (run from a vconsole).
alias v,lock='systemctl suspend && vlock --all'

# MISC. ABBREVIATIONS {{{1

# (Un)mount drives, e.g. external usb devices (udisks2).
# Because automounting is not smart enough and always breaks somehow.
alias d,mount='udisksctl mount --options fmask=0133 dmask=0022 noexec -b'
alias d,unmount='sync && udisksctl unmount -b'

# Only for X.
alias x,clip='xclip -sel clip'
alias x,op='1>/dev/null 2>/dev/null setsid xdg-open'

# Find and print site urls from elinks history or bookmarks.
alias e,hist='cut -f2 < ~/.elinks/globhist|fzf'
alias e,mark='cut -f2 < ~/.elinks/bookmarks|fzf'

# Launch qutebrowser debugging instances (dark or light CSS mode).
alias q,light='setsid -f qutebrowser -T'
alias q,dark='setsid -f qutebrowser -T -s "colors.webpage.preferred_color_scheme" "dark"'

# Ouroboros and the Virtual Environment.
alias py=python
alias py,venv='$(2>/dev/null pyenv prefix||printf "/usr")/bin/python -m venv .venv-${PWD##*/} && source .venv-${PWD##*/}/bin/activate && pip install --upgrade pip flake8 mypy black'
alias py,activate='test -f .venv-${PWD##*/}/bin/activate && source .venv-${PWD##*/}/bin/activate'
alias py,lint='pylint -E --output-format=colorized'
alias by='bpython'
alias pip,upgrade-all='python -m pip list --outdated|cut -d " " -f 1|xargs -n 1 python -m pip install -U'

# Die Julia
alias jl='julia --banner=no'
alias jl,env='julia --banner=no --project=$PWD'
alias jl,bw='julia --banner=no --color=no'
alias jl,tmp='julia --banner=no --startup-file=no --history-file=no'

# Without music, life would be a mistake.
alias a,mute='amixer set Master toggle'
alias a,mixer=alsamixer

# Create an archive of <folder>: PATTERN=<folder> && mktar <archive>.tar.gz <folder>
alias mktar='tar --transform=s/$PATTERN/$(date +%Y%m%dT%H%M)/ --exclude={__pycache,.mypy_cache} -vcaf'

# Create backup according to ./.BACKUP using rsync: backup <destination>
alias backup='rsync -rszauhP --no-links --delete --files-from=$HOME/.BACKUP .'

# Send stdin to pastebin at https://x0.at/
alias tobin='curl -F "file=@-;filename=.txt" https://x0.at/'

# Invert RGB channel of a png image (stdin) using imagemagick.
alias rgb-neg='convert - -channel RGB -negate -'
