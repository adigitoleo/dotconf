# vim:ft=sh

# COLORS AND OUTPUT FORMATTING
alias ls='ls --color=auto --group-directories-first'
alias d='diff --color=always -u'
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias ip='ip --color=auto'
alias lsblk='lsblk -o NAME,MAJ:MIN,RM,SIZE,RO,TYPE,MOUNTPOINT,FSTYPE,FSVER'
alias tree='tree --dirsfirst'
alias less='less -iR'
alias tmux='TERM=xterm-256color tmux'
alias l='tree -L 2|less'
alias df='df --si'
alias du='du --si'
alias dirs='dirs -pv'
alias tl,dr='tldr --color=always'


# VERSION CONTROL AND SYSTEM ADMIN
alias y=yadm
if 1>/dev/null 2>&1 command -v pacman ; then
    alias pacman='pacman --color=auto'
    alias p='pacman --color=auto'
    alias p,get='sudo pacman -Syu --color=auto'
    alias p,rmsafe='sudo pacman -Rn --color=auto'
    alias p,rm='sudo pacman -Rns --color=auto'
    alias p,orphans='pacman -Qtdq --color=auto'
    alias p,info='pacman -Qi --color=auto'
    alias p,rinfo='pacman -Si --color=auto'
    alias aur='auracle'
    alias pacdiff='sudo SUDO_EDITOR="nvim -d" DIFFPROG="sudoedit" pacdiff'
elif 1>/dev/null 2>&1 command -v xbps-install ; then
    alias p,search='xbps-query -Rs'
    alias p,get='sudo xbps-install -Su'
    alias p,rmsafe='xbps-remove'
    alias p,rm='sudo xbps-remove -R'
    alias p,orphans='xbps-query --list-orphans'
    alias p,info='xbps-query --show'
    alias p,rinfo='xbps-query -R --show'
    alias p,manual='xbps-query -m|rev|cut -d- -f2-|rev|while IFS= read -r pkg; do xbps-query $pkg -p install-date|tr "\n" "\t"; echo $pkg; done|sort -n'
    alias p,unmaint='xbps-query -p maintainer -s Orphaned|rev|cut -d- -f2-|rev|while IFS= read -r pkg; do xbps-query $pkg -p install-date|tr "\n" "\t"; echo $pkg; done|sort -n'
    alias p,ownedby='xbps-query --ownedby'
    alias p,revdeps='xbps-query -RX'
elif 1>/dev/null 2>&1 command -v apt ; then
    alias p,get='sudo apt update && sudo apt upgrade && sudo apt install'
    alias p,search='apt search'
    alias p,rinfo='apt show'
fi

# Use ED25519 ssh keys by default.
alias ssh-keygen='ssh-keygen -t ed25519'

# Distinguish text from binary files (defer to grep).
alias is_text_file='grep -qIF ""'

# Terminal editor.
alias e=\$EDITOR
alias v=\$VISUAL

# rg,glob 'pattern' : find filenames in current directory that match glob
alias rg,glob='rg --files -g'
# rg,absglob 'pattern' : same as rg,glob but print absolute paths
alias rg,absglob='rg $PWD --files -g'
# rg,find [opts] 'pattern' : find filenames recursively
alias rg,find='rg --files|rg'
# rg,absfind [opts] 'pattern' : same as rg,find but print absolute paths
alias rg,absfind='rg --files $PWD|rg'
# ripgrep but with --color=always for piping to a pager
alias rg,color='rg --color=always'

# Cycle through $(dirs); the pushd/popd equivalent to cd -
alias c,='pushd +1'

# New terminal instance (same directory).
alias t='1>/dev/null 2>/dev/null setsid $TERM'

# Zellij because tmux is too mainstream.
alias z,main='zellij attach main||zellij -s main --layout=main'
alias z,scratch='zellij attach scratch||zellij -s scratch --layout=scratch'

# Open files but don't make a fuss on stdout.
alias open='1>/dev/null 2>/dev/null setsid xdg-open'

# The utmp stuff is horrible, let's avoid it. Musl libc doesn't provide it.
alias who='ps -A -ouser,uid|sort -u|tail -n+2'  # All users that are doing stuff.
alias users='cat /etc/passwd|cut -d: -f1'  # All users that have a password.

# (Un)mount drives, e.g. external usb devices (udisks2).
# Because automounting is not smart enough and always breaks somehow.
alias d,mount='udisksctl mount --options fmask=0133 dmask=0022 noexec -b'
alias d,unmount='sync && udisksctl unmount -b'

# Get host info.
alias ip,lan='ip route get 1|rg -o "src [^\s]*"|cut -d" " -f2'

# Launch qutebrowser with backend-forced dark mode for stuborn sites.
alias q,dark='QB_QT_DARKMODE=1 setsid -f qutebrowser -T -C ~/.config/qutebrowser/config.py'
# Launch qutebrowser with backend-forced dark mode using tor proxy.
alias q,tor='QB_QT_DARKMODE=1 QB_TOR_PORT=9050 setsid -f qutebrowser -T -C ~/.config/qutebrowser/config.py'
# Launch qutebrowser with backend-forced dark mode and go to semanticscholar.
alias q,scholar='QB_QT_DARKMODE=1 setsid -f qutebrowser -T -C ~/.config/qutebrowser/config.py semanticscholar.org/sign-in'

# Ouroboros and the Virtual Environment.
alias py=python
alias py,venv='$(2>/dev/null pyenv prefix||printf "/usr")/bin/python -m venv .venv-${PWD##*/} && source .venv-${PWD##*/}/bin/activate && pip install --upgrade pip flake8 mypy black pipdeptree pip-tools'
alias py,activate='test -f .venv-${PWD##*/}/bin/activate && source .venv-${PWD##*/}/bin/activate'
alias py,lint='pylint -E --output-format=colorized'
alias py,repl='ptpython --$(theme -q)-bg'
alias py,update='mv -i requirements.txt requirements.bak && pip install --upgrade pip && pip-compile --resolver=backtracking && pip-sync'

# Die Julia.
alias jl='julia --banner=no'
alias jl,rev='julia --banner=no -e "using Revise" -i'
alias jl,env='julia --banner=no --startup-file=no --project=$PWD'
alias jl,bw='julia --banner=no --color=no'
alias jl,tmp='julia --banner=no --startup-file=no --history-file=no'

# Carcinisation and the Skill Issue.
alias r,update="cargo install \$(cargo install --list | egrep '^[a-z0-9_-]+ v[0-9.]+:$' | cut -f1 -d' ')"

# Without music, life would be a mistake.
alias a,mute='amixer set Master toggle'
alias a,mixer=alsamixer

# Create backup according to ./.BACKUP using rsync: backup <destination>
alias backup='rsync -rszauhP --no-links --delete --info=nonreg0 --files-from=$HOME/.BACKUP $HOME'

# Use readline key bindings in maxima.
alias maxima='rlwrap maxima'

# Mpv media player detached instance with larger window, playing in loop, use: m,loop <file>.
alias m,loop='2>/dev/null 1>&2 setsid -f mpv --geometry=1200x1200 --loop'

# Launch libreoffice and stop complaining on my file descriptors.
alias office='2>/dev/null 1>&2 setsid -f libreoffice'

# Flatten input (file) by joining all lines into one.
alias flatten='paste -d" " -s'
