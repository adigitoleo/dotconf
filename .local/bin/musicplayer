#!/bin/zsh
set -eu
readonly SCRIPTNAME="${0##*/}"
usage() {
    printf 'Usage: %s [-h]\n' "$SCRIPTNAME"
    printf '       %s ' "$SCRIPTNAME"
    echo '[-p port][-s][-r] DIRECTORY ...'
    printf '       %s ' "$SCRIPTNAME"
    echo '[-f file]'
    echo
}
helpf() {
    echo 'Options:'
    echo '-f <file>         audio file, supports .opus, .mp3 or .flac'
    echo '-p <port>         port number to use for sending commands to fzf(1),'
    echo '                  default: 6266'
    echo '-s                shuffle file list using shuf(1)'
    echo '-r                repeat from the beginning of the list when finished'
    echo
    echo 'Operands:'
    echo '  <DIRECTORY>     music directory, for playlist mode using rg(1)'
    echo '                  and fzf(1)'
    echo
    echo 'Decode and play a compressed audio file. Required executables:'
    echo ' - aplay(1) for .opus and .flac files'
    echo ' - opusdec(1) for .opus files'
    echo ' - ffplay(1) for .mp3 files'
    echo ' - flac(1) for .flac files'
    echo 'An URL to a radio stream can also be given to the -f option,'
    echo 'and it will be played using ffplay(1).'
}

warn() { >&2 printf '%s\n' "$SCRIPTNAME: $1"; }
is_command() { # Check if command exists, for flow control (no stdout messages)
    if 1>/dev/null 2>&1 command -v "$1"; then
        return 0
    else
        warn "command '$1' not found"; return 1
    fi
}

play() {
    FILENAME="$1"
    JOB=
    echo "$SCRIPTNAME: playing ${FILENAME/$HOME/\~}"
    if [ "${FILENAME##*.}" = "mp3" ]; then
        is_command ffplay || exit 1
        sleep 5 && 2>/dev/null ffplay -vn -sn -nodisp -autoexit -hide_banner "$FILENAME"
        JOB=$!
    elif [ "${FILENAME##*.}" = "opus" ]; then
        is_command opusdec || exit 1
        is_command aplay || exit 1
        opusdec --quiet --force-wav "$FILENAME" -|aplay --quiet
        JOB=$!
    elif [ "${FILENAME##*.}" = "flac" ]; then
        is_command flac || exit 1
        is_command aplay || exit 1
        flac -dcs "$FILENAME"|aplay --quiet
        JOB=$!
    elif [ "${FILENAME%%:*}" = "https" ]; then
        is_command ffplay || exit 1
        2>/dev/null ffplay -vn -sn -nodisp -autoexit -hide_banner "$FILENAME"
        JOB=$!
    else
        warn "audio file format for $FILENAME unrecognised or not supported"
    fi

    trap "[ -n \"$JOB\" ] || kill $JOB" EXIT HUP TERM INT
}

FILENAME=
FZF_PORT=6266
SHUFFLE=1
REPEAT=1
[ $# -eq 0 ] && usage && exit 1
while getopts "hsrp:f:" OPT; do
    case $OPT in
        h ) usage && helpf; exit 0;;
        f ) FILENAME="$OPTARG";;
        p ) FZF_PORT="$OPTARG";;
        s ) SHUFFLE=0;;
        r ) REPEAT=0;;
        * ) usage; exit 1;;
    esac
done
shift $(( OPTIND - 1 ))

# Playlist mode, sets up a listing using fzf and uses a recursive call with -f
# to play the selected file.
if [ "$FILENAME" = "" ]; then
    is_command rg || exit 1
    FZF_DEFAULT_COMMAND="rg --sort=path --files -g '*.mp3' -g '*.flac' -g '*.opus' $@"
    if [ $SHUFFLE -eq 0 ]; then
        is_command shuf || exit 1
        FZF_DEFAULT_COMMAND="${FZF_DEFAULT_COMMAND}|shuf"
    fi
    if [ $REPEAT -eq 0 ]; then
        fzf --listen "$FZF_PORT" --cycle --no-sort \
            --bind "ctrl-r:reload:$FZF_DEFAULT_COMMAND || true" \
            --preview-window up,2 --preview "$SCRIPTNAME -f {}" \
            && kill -a musicplayer && exit 0
    else
        fzf --listen "$FZF_PORT" --no-sort \
            --bind "ctrl-r:reload:$FZF_DEFAULT_COMMAND || true" \
            --preview-window up,2 --preview "$SCRIPTNAME -f {}" \
            && kill -a musicplayer && exit 0
    fi
    exit 0
fi

play "$FILENAME"

if [ -n "$FZF_PORT" ]; then
    # Move to next file automatically,
    # requires fzf to be started with --listen <FZF_PORT>
    [ -n "$JOB" ] || { sleep 5 && curl -XPOST localhost:"$FZF_PORT" -d 'down'; }
fi

if [ $REPEAT -eq 0 ]; then
    # Loop single file.
    play "$FILENAME"
fi
