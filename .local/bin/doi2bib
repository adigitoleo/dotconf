#!/usr/bin/env python3
"""Generate BibTeX reference metadata from DOI links.

Provide full DOI links via stdin or a text file. Lines beginning with '#' in
the file are safe to use for comments.

"""

import argparse
import urllib.request as ur


def _get_args():
    parser = argparse.ArgumentParser(
        description=(
            "Generate BibTeX reference metadata from DOI links."
        ),
        epilog=(
            """Use the standard POSIX flag '-' to switch from reading the file
            to reading from standard input (e.g. to read DOI links directly
            from the command line). Lines starting with '#' in the file are not
            parsed, and can be used for comments.

            """
        ),
    )
    parser.add_argument(
        'file',
        metavar="FILE",
        nargs='?',
        type=argparse.FileType('r'),
        default='-',  # Use standard POSIX '-' flag to read from stdin instead.
        help="text file containing reference DOI links (max. one per line)",
    )
    parser.add_argument(
        'doilist',
        metavar="DOI",
        nargs='*',  # Collect all strings after '-' from stdin.
        help="reference DOI links passed in as stdin arguments",
    )
    args = parser.parse_args()
    return args


def _main():
    args = _get_args()
    if args.file.name == '<stdin>' and not args.doilist:
        raise IOError(
            "must provide either text file or args with the list of DOI links"
        )

    hdr = {'Accept' : 'application/x-bibtex'}

    # Read DOI's from the file if provided.
    if args.file.name != '<stdin>':
        for line in args.file:
            if line.startswith('#'):  # Treat hash as comment marker.
                continue
            if line.rstrip():  # Skip blank lines.
                url = line.rstrip().lstrip()
                req = ur.Request(url, headers=hdr)
                response = ur.urlopen(req)
                print(response.read().decode('utf-8'))

        # Need to close the stream, see
        # https://discuss.python.org/t/argparse-filetype-trick/1863
        args.file.close()

    # Read DOI's from stdin if provided via args.
    for doi in args.doilist:
        url = doi.rstrip().lstrip()
        req = ur.Request(url, headers=hdr)
        response = ur.urlopen(req)
        print(response.read().decode('utf-8'))


if __name__ == '__main__':
    _main()
