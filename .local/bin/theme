#!/bin/sh
set -u
readonly SCRIPTNAME="${0##*/}"
usage() {
    printf 'Usage: %s [-h]\n' "$SCRIPTNAME"
    printf '       %s ' "$SCRIPTNAME"
    echo '[-q|-t|-s theme]'
}
helpf() {
    echo 'Options:'
    echo '-q                query the current theme from THEME_SOURCE'
    echo '-s <theme>        set the theme to either dark or light explicitly'
    echo '-t                toggle between dark and light themes'
    echo
    echo 'Simple and unintrusive dark/light theme switcher,'
    echo 'providing a central interface for programs to query the'
    echo 'requested theme. It does not restart anything automatically,'
    echo 'and therefore does not need to know about any other APIs.'
    echo 'This utility could be used to set the theme at startup,'
    echo "and compatible programs can be set up to read '$SCRIPTNAME -q'."
    echo "THEME_SOURCE should be an alacritty config file in TOML format."
}
warn() { >&2 printf '%s\n' "$SCRIPTNAME: $1"; }

if [ -z "${THEME_SOURCE+_}" ] ; then
    DEFAULT_THEME_SOURCE="$HOME/.config/alacritty/alacritty.toml"
    if [ -f "$DEFAULT_THEME_SOURCE" ] ; then
        THEME_SOURCE="$DEFAULT_THEME_SOURCE"
    else
        warn "can't load default theme source: $DEFAULT_THEME_SOURCE" ; exit 1
    fi
fi
theme_query() { # Query current theme from $THEME_SOURCE
    awk 'BEGIN {FS = "="} /^import/ && $2 ~ /mellow/ \
        {match($2, /\w+.toml/); print(substr($2, RSTART, RLENGTH-5))}' \
            "$THEME_SOURCE"
}
theme_set() { # theme_set [theme] Set the theme in $THEME_SOURCE using sed
    case "$1" in
        'light' ) sed -i "s/mellow-dark/mellow-light/" "$THEME_SOURCE" ;;
        'dark' ) sed -i "s/mellow-light/mellow-dark/" "$THEME_SOURCE" ;;
        * ) warn "theme '$1' is not supported"
    esac
}
theme_toggle() {
    case "$(theme -q)" in
        'dark' ) theme_set light ;;
        'light' ) theme_set dark ;;
    esac
}

[ $# -eq 0 ] && usage && exit 1
# NOTE: Long form options like `--help` are not POSIX compliant.
while getopts "qs:th" OPT ; do
    case "$OPT" in
        q ) theme_query && exit 0 ;;
        s ) theme_set "$OPTARG" && exit 0 ;;
        t ) theme_toggle && exit 0 ;;
        h ) usage && helpf ; exit 0 ;;
        * ) usage ; exit 1 ;;
    esac
done
