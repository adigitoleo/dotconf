#!/bin/sh
# =============================================================================
# Configuration for the bsp window manager:
# <https://github.com/baskerville/bspwm>
# The script can be run from a bsp session to reset the window manager.

# TODO: Set up conky(?) with welcome text and keyboard shortcut hints.

# Set wallpaper.
feh --no-fehbg --bg-fill $HOME/Pictures/wallpapers/chauvet_lions_66292F.jpg &

# Set up a screen locker with xss-lock (if not already running).
pgrep -x xss-lock >/dev/null \
    || xss-lock --transfer-sleep-lock -- ~/.local/bin/lock.sh &

# Detect monitors using xrandr and set up workspaces.
if [ $(xrandr -q|grep -cw connected) -eq 2 ]; then
    xrandr --output eDP1 --off
    sleep 0.5
    xrandr --output eDP1 --auto --primary \
        --output DP1 --right-of eDP1 --scale 1.5 --auto
    bspc monitor eDP1 -d 1 2 3 4 5
    bspc monitor DP1 -d 6 7 8 9
else
    bspc monitor -d 1 2 3 4 5 6 7 8 9
fi

# Configure bspwm options.
bspc config split_ratio 0.6
bspc config focus_follows_pointer true
bspc config single_monocle true
bspc config borderless_monocle true
bspc config gapless_monocle true
bspc config automatic_scheme alternate
bspc config border_width 5
bspc config window_gap 5
bspc config normal_border_color "#66292F"  # unfocused window
bspc config active_border_color "#66292F"  # focused, on unfocused monitor
bspc config focused_border_color "#A67458"  # focused, on focused monitor
bspc config presel_feedback_color "#A67458"  # focused, on focused monitor

# Window rules.
bspc rule -a "Lxappearance" state=floating
bspc rule -a "Kvantum Manager" state=floating
bspc rule -a "vlc" state=floating
bspc rule -a "matplotlib" state=floating  # Doesn't work from IPython, <https://github.com/ipython/ipython/issues/10976>
bspc rule -a "gksqt" state=floating
bspc rule -a "zoom" state=floating
bspc rule -a "ProtonMail Bridge" state=floating
bspc rule -a "Zathura" state=tiled

bspc rule -a "Floating Terminal" state=floating
bspc rule -a "ShearSplit" state=floating
bspc rule -a "fzfmenu" state=floating
bspc rule -a "qt_application.py" state=floating
bspc rule -a "launcher" state=floating
bspc rule -a "pytheas.py" state=floating

# Run polybar (statusbar) launcher, always last, log errors to tmpfile.
$HOME/.local/bin/pbar.sh bspwm 2>>$(mktemp --tmpdir=/tmp log.polybar-XXXXXX) 1>&2 &
